---
title: "Problem Overview"
author: "Marie Hardt"
bibliography: "`r rbbt::bbt_write_bib('overviewreferences.bib', keys=rbbt::bbt_detect_citations(here::here('problem_overview.qmd')),
   ignore = stringr::str_subset(rbbt::bbt_detect_citations(here::here('problem_overview.qmd')), '(^fig-|^tbl-|^eq-|^sec-|^lst-|^thm-|^lem-|^cor-|^prp-|^cnj-|^def-|^exm-|^exr-)'), overwrite = TRUE, library_id='Graphics-Research', translator='bibtex')`"
number-sections: true
header-includes:
   - \usepackage{hyperref}
   - \usepackage[dvipsnames]{xcolor} % colors
   - \usepackage{longtable}
   - \newcommand{\mh}[1]{{\textcolor{blue}{#1}}}
   - \newcommand{\gb}[1]{{\textcolor{RedOrange}{#1}}}
   - \newcommand{\hh}[1]{{\textcolor{Green}{#1}}}

format:
  pdf:
    keep-tex: true
    fontsize: 11pt
    toc: true
    link-citations: true
    geometry:
      - right=1in
      - left=1in
      - top=1in
      - bottom=1in

filters:
   - latex-environment
commands: [rr,svp,hh]    
---

```{r}
#| echo: false
#| warning: false
#| message: false
library(rbbt)
library(tidyverse)
library(leaflet)
library(sf)
library(glue)
library(DrivePlotR)
library(tmap)
tmap_mode("plot")
```

# To Dos

\hh{please include the to do items from the email from two weeks ago}

\hh{There is a huge difference between how the document renders in html and in pdf. For the thesis it is better to aim for a pdf document, because ISU accepts latex but not html. }

# Introduction

For this project, we use two primary data sources: naturalistic driving study (NDS) data and connected vehicle (CV) data. Both of these data sources, make extensive use of location information from the Global Positioning System (GPS). We first discuss some essential background regarding GPS data in @sec-background. We describe NDS data in @sec-nds and also describe CV data in @sec-cv. @sec-problemoverview provides an overview of some methods used to orthogonally project GPS location information onto the road system.

# Background {#sec-background}

## Global Positioning System

\hh{XXX You need to first introduce more details on the global positioning system before going into its quality assessment}

## Dilution of Precision

The Global Positioning System (GPS) is part of the Global Navigation Satellite System (GNSS), which provides accurate location and timing data for a wide variety of applications under open sky conditions [@isikIntegrityAnalysisGPSBased2020]. For example, vehicle locations from naturalistic driving studies and connected vehicles are tracked using GPS. However, such location data are not error-free, and errors may arise from a variety of sources, including satellite errors, transmission errors, environmental errors, and receiver errors [@isikIntegrityAnalysisGPSBased2020].

Dilution of Precision (DOP) coefficients are unitless measurements representing the relative positions of navigation satellites and the receiver and the influence of the relative positions on the location obtained [@isikIntegrityAnalysisGPSBased2020]. There are seven different types of DOP coefficients, each accounting for a different location aspect: Geometric DOP (GDOP), Time PDOP (TDOP), Position DOP (PDOP), Horizontal DOP (HDOP), Vertical DOP (VDOP), East DOP (EDOP), and North DOP (NDOP) [@isikIntegrityAnalysisGPSBased2020].

@isikIntegrityAnalysisGPSBased2020 presented the following relationships among the seven DOP coefficients:

$$
\begin{aligned}
\text{GDOP} &= \sqrt{\text{PDOP}^2 + \text{TDOP}^2}\\
\text{PDOP} &= \sqrt{\text{HDOP}^2 + \text{VDOP}^2}\\
\text{HDOP} &= \sqrt{\text{EDOP}^2 + \text{NDOP}^2}
\end{aligned}
$$

@isikIntegrityAnalysisGPSBased2020 also showed how to calculate the DOP coefficients. Let $\theta_1$, $\theta_2$, $\theta_3$, and $\theta_4$ denote the elevations of the four best satellites for calculating DOP coefficients. Also let $\varphi_1$, $\varphi_2$, $\varphi_3$, and $\varphi_4$ denote the azimuths of the four best satellites. Then we have

$$
\begin{aligned}
G &= \begin{bmatrix}
-\cos(\theta_1)\sin(\varphi_1) & -\cos(\theta_1)\cos(\varphi_1) & -\sin(\theta_1) & 1\\
-\cos(\theta_2)\sin(\varphi_2) & -\cos(\theta_2)\cos(\varphi_2) & -\sin(\theta_2) & 1\\
-\cos(\theta_3)\sin(\varphi_3) & -\cos(\theta_3)\cos(\varphi_3) & -\sin(\theta_3) & 1\\
-\cos(\theta_4)\sin(\varphi_4) & -\cos(\theta_4)\cos(\varphi_4) & -\sin(\theta_4) & 1\\
\end{bmatrix}\\
H &= \left(G^T \cdot G\right)^{-1}\\
\text{GDOP} &= \sqrt{H_{11} H_{22} H_{33} H_{44}}\\
\text{PDOP} &= \sqrt{H_{11} H_{22} H_{33}}\\
\text{HDOP} &= \sqrt{H_{11} H_{22}}\\
\text{VDOP} &= \sqrt{H_{33}}\\
\text{TDOP} &= \sqrt{H_{44}}
\end{aligned}
$$

Higher DOP coefficients indicate worse positional accuracy, and two main factors increase DOP coefficients: sub-optimal geometry of the satellite constellation and obscured satellites [@isikIntegrityAnalysisGPSBased2020]. Even under ideal conditions, the geometry of the satellite constellation visible to the receiver constantly changes due to the movement of the satellites and the receiver. For DOP calculations, four satellites that are further apart in the sky (as visible from the receiver) are more optimal than four satellites that are close together in the sky [@isikIntegrityAnalysisGPSBased2020]. Satellite obscuration prevents some satellites from being visible to the receiver. Tall buildings in urban areas commonly obscure satellites, which is a problem because the receiver cannot see more optimal satellites and must instead rely on a suboptimal satellite constellation to determine location [@isikIntegrityAnalysisGPSBased2020].

@isikIntegrityAnalysisGPSBased2020 noted that there is no agreed-upon standard for relating DOP coefficient values to the quality of navigation data. Recall that lower DOP coefficient values indicate higher quality navigation data. @isikIntegrityAnalysisGPSBased2020 presented the scale for DOP coefficient values shown in @tbl-dop based on the literature and the results of their own work.

:::{#tbl-dop}

```{=latex}
\begin{table}
\begin{tabular}{|l|l|l|l|l|l|l|}
\hline
DOP Value             & $<1$  & $1-2$     & $2-5$ & $5-10$   & $10-20$ & $>20$ \\ \hline
Location Data Quality & Ideal & Excellent & Good  & Moderate & Fair    & Poor  \\ \hline
\end{tabular}
\end{table}
```

Scale relating the value of dilution of precision (DOP) coefficients to location data quality [@isikIntegrityAnalysisGPSBased2020]
:::


## Coordinate Reference Systems

To work with location data, we must know the coordinate reference system for the data. Coordinate reference systems arise from the positioning and orienting of a coordinate system with respect to a datum [@iliffeCoordinatesReferenceSystems2008]. For any coordinate system, the system dimension, or the number of axes for the system, must be defined. We also need to know the name of each axis, the order of the axes (which in turn gives the order of coordinates), the direction in which coordinates increase along the axes, and the measurement units for the axes [@iliffeCoordinatesReferenceSystems2008]. Coordinate systems for the approximately spherical (actually ellipsoidal) Earth use three axes: latitude (the angle north or south of the equatorial plane), longitude (the angle east or west from a specified prime meridian), and height (the distance above the surface of the Earth) [@iliffeCoordinatesReferenceSystems2008].

However, latitude and longitude coordinates are ambiguous without information about the datum used to relate the coordinate system to the Earth's surface [@iliffeCoordinatesReferenceSystems2008]. The Earth's true shape is called the geoid, and a geodetic datum relates an ellipsoidal approximation of the shape of the Earth to the geoid [@iliffeCoordinatesReferenceSystems2008]. A datum must be realized through physical monuments of established coordinates in the area of interest before it can be used [@iliffeCoordinatesReferenceSystems2008]. A coordinate reference system (CRS) is a coordinate system associated to an object through the use of a datum [@iliffeCoordinatesReferenceSystems2008].

Since the geolocation data for this project come from GPS, the primary CRS used in this project is the World Geodetic System of 1984, abbreviated WGS 84. WGS 84 is the CRS for GPS locations. @iliffeCoordinatesReferenceSystems2008 note that the starting points for WGS 84 are the orbital positions transmitted by the GPS satellites and determined by a network of monitoring stations maintained by the United States military. The WGS 84 datum is realized by the coordinates of these monitoring stations [@iliffeCoordinatesReferenceSystems2008].

Map projections must be used to visualize locations from the three-dimensional surface of the Earth on a two-dimensional map [@iliffeMapProjections2008]. However, spheres and ellipsoids cannot be projected onto a flat surface like a map without distorting or cutting them. Such distortion should not be considered an error, however, because the method of projection is known and the true coordinates in the original, unprojected CRS may be obtained if the projection parameters are known [@iliffeMapProjections2008]. For example, interactive maps created with the R package `leaflet` [@chengLeafletCreateInteractive2024] expect that the input coordinates use the WGS 84 CRS and the WGS 84 Web Mercator projection is used to project the coordinates onto a two-dimensional map.

# Driving Data Sources {#sec-drivingdatasources}

## Naturalistic Driving Study Data {#sec-nds}

The NDS data come from a naturalistic driving study conducted by the University of Nebraska Medical Center (UNMC). Data for the study were collected at two 3-month intervals conducted over two years (2 data collection periods). At the start of each 3-month NDS data collection period, custom-built "Black Boxes" were installed in each study participantâ€™s personal vehicle. The "Black Box" system continuously and passively recorded driver behavior from when the vehicle ignition was turned on to when it was turned off. Video of the forward roadway and the vehicle cabin were recorded by cameras mounted on the vehicleâ€™s front windshield, next to the rearview mirror. Multiple sensors (GPS, speed, accelerometer, gyroscope, and throttle) collected data during each drive. The raw data were post-processed to a sampling rate of 1 Hz to ensure data quality (Internal study documentation, 2023).

The variables available in the processed UNMC NDS data are described (as per the internal study documentation) in @tbl-rwrad.

<!-- From the file BlackBox_FormatQAPass_DataDictionary.docx -->

:::{#tbl-rwrad}

```{=latex}
\begin{longtable}[c]{|p{0.25\textwidth}|p{0.33\textwidth}|p{0.33\textwidth}|}
\hline
 %\multicolumn{3}{| c |}{Beginning of Table}\\
 %\hline
 Variable & Units/Values & Description\\
 \hline
 \endfirsthead
 
 \hline
 \multicolumn{3}{|c|}{Continued from previous page}\\
 \hline
 Variable & Units/Values & Description\\
 \hline
 \endhead
 
 \hline
 \endfoot

\hline
%\multicolumn{3}{| c |}{End of Table}\\
%\hline\hline
\endlastfoot

device & NA & Device ID of Black Box\\
\hline
drive & NA & Numeric value sequentially ordered across time indicating the drive number to which the data correspond\\
\hline
time\_utc & yyyy-mm-dd hh:mm:ss & Date timestamp in UTC\\
\hline
gps\_long & Decimal degrees & Longitude returned from GPS\\
\hline
gps\_lat & Decimal degrees & Latitude returned from GPS\\
\hline
gps\_elevation & Meters & Elevation returned from GPS\\
\hline
gps\_heading & Degrees & Direction over the ground the vehicle is currently moving (returned from GPS)\\
\hline
gps\_fix & 0 = no fix\newline 1 = time only\newline 2 = 2D fix (latitude and longitude)\newline 3 = 3D fix (latitude, longtitude, and elevation) & Value representing the quality of the connection (or ``fix") between the GPS receiver and the GPS satellite constellation. A fix type of 2 gives good GPS location data, but applications that need more precise location estimates (e.g., applications relying on GPS speed) should use a fix type of 3. Theoretically, a fix type of 1 is the worst quality fix type that gives GPS time information, but data inspection suggests that for this study, the worst fix type giving GPS time information may actually be 2.\\
\hline
gps\_sats & NA & Number of satellites the GPS can ``see"\\
\hline
gps\_pdop & \textless{}1 = Ideal\newline 1-2 = Excellent\newline 2-5 = Good\newline 5-10 = Moderate\newline 10-20 = Fair\newline \textgreater{}20 = Poor\newline & Dilution of precision measure for 3D position\\
\hline
gps\_hdop & See gps\_pdop & Dilution of precision for the horizontal plane\\
\hline
gps\_vdop & See gps\_pdop & Dilution of precision for the vertical axis\\
\hline
gyro\_x & Degrees/second & Angular rotation rate about the right-to-left axis\\
\hline
gyro\_y & Degrees/second & Angular rotation rate about the forward-to-backward axis\\
\hline
gyro\_z & Degrees/second & Angular rotation rate about the up-to-down axis\\
\end{longtable}
```

Metadata for naturalistic driving study
:::

## Connected Vehicle Data {#sec-cv}

The CV data come from the data provider StreetLight and are available from the Institute for Transportation (InTrans) at Iowa State University. The connected vehicles directly provide trajectory information every 1-3 seconds throughout their journeys. Each trip is uniquely identified by a unique JourneyID and each data point has a unique DatapointID (InTrans internal documentation, 2025).

Connected vehicles collect a variety of data throughout their journeys, including vehicle location, speed, and heading. Other variables, such as acceleration, are derived from the data. @tbl-cvmetadata provides an overview of the available variables in the CV data, as described in the InTrans internal documentation.

:::{#tbl-cvmetadata}

```{=latex}
\begin{longtable}[c]{|p{0.25\textwidth}|p{0.08\textwidth}|p{0.1\textwidth}|p{0.15\textwidth}|p{0.15\textwidth}|p{0.1\textwidth}|}
\hline
 %\multicolumn{6}{| c |}{Beginning of Table}\\
 %\hline
 Field & Source & Units & Description & Possible Issues & Domains\\
 \hline
 \endfirsthead
 
\hline
 \multicolumn{6}{|c|}{Continued from previous page}\\
 \hline
 Field & Source & Units & Description & Possible Issues & Domains\\
 \hline
 \endhead

\hline
\endfoot

\hline
%\multicolumn{6}{| c |}{End of Table}\\
%\hline\hline
\endlastfoot

datapoint\_id & Derived & NA & Unique identifier for each data point & &\\
\hline
journey\_id & Raw & NA & Unique identifier for each vehicle journey. The journey id represents the same vehicle from ignition on to ignition off. & Streetlight notified InTrans that some journey ids are non-compliant due to not having an ignition on/off, typically due to data coming in late. & \\    
\hline
capture\_time\_stamp & Raw & yyyy-mm-dd hh:mm:ss & Timestamp of the data in Central Time & & \\
\hline
latitude & Raw & Decimal degrees WGS 84 & Latitude value for the data point & & \\
\hline
longitude & Raw & Decimal degrees WGS 84 & Longitude value for the data point & & \\
\hline
heading\_deg & Raw & Degrees & Direction the vehicle is traveling, where 0 degrees is East, 90 is North, 180 is West and 270 is South. & & \\
\hline
elevation\_ft & Raw & Feet & Vertical distance above sea level measured in feet & & \\
\hline
speed\_mph & Raw & Miles per hour & Speed of the vehicle for the data point & & \\
\hline
acceleration & Derived & $\text{ft/s}^2$ & Derived acceleration between the previous data point and the current data point for the journey & & \\
ignition\_status & Raw & NA & Identifies whether the data is at the begining/end of the trip or part of the middle of the trip & & MIDTRIP, KEYON, KEYOFF  \\
\hline
route\_id & Derived & NA & Closest route id segment to the data point & & \\
\hline
measure & Derived & Miles & Precise measure value along the route ID segments to the data point. The segmentation is based on Iowa DOT RAMS network. & & \\
\hline
distance\_from\_route & Derived & Feet & Distance the data point is from the centerline of the RAMS network & Data points in parking lots and fields will still be associated to the closest roadway. & \\
\hline
segment\_start\_measure & Derived & Miles & Segment start measure value along the route ID segments to the data point & & \\
\hline
segment\_end\_measure & Derived & Miles & Segment end measure value along the route ID segments to the data point & & \\
\hline
geohash & Derived & NA & Unique identifier for a specific region on earth & &  \href{https://www.ibm.com/docs/en/streams/4.3.0?topic=334-geohashes}{Geohash documentation}  \\
\hline
masking\_digit & Derived & NA & Number of digits in the latitude or longitude (whichever is smaller). Used to identify whether the data is masked (value less than 5). & & \\
\hline
year & Derived & NA & Year partition in which the data point was downloaded (not necessarily the year of the capture time stamp) & & \\
\hline
county\_id & Derived & NA & County where the data point is located. The county is represented by a number which can be identified in RAMS located at the link in the domain. & & \href{https://gis.iowadot.gov/rams/rest/services/lrs/FeatureServer/43}{RAMS}\\
\hline
month & Derived & NA & Month partition in which the data point was downloaded (not necessarily the month of the capture time stamp) & & \\
\hline
day & Derived & NA & Day partition in which the data point was downloaded (not necessarily the day of the capture time stamp) & & \\
\hline
hour & Derived & NA & Hour partition in which the data point was downloaded (not necessarily the hour of the capture time stamp) & & \\
\end{longtable}

```

Connected Vehicle Metadata
:::


## Road Network Metadata {#sec-roadnetwork}

As described in the InTrans internal documentation, the CV data continuously stream into InTrans, which listens and archives data approximately every 60 seconds. The data are processed as they are archived, and part of the process involves relating the CV data to the Iowa DOT road network, as provided by the Road Asset Management System (RAMS). The road network is broken into approximately 0.1 mile segments for relating to the CV data. The CV data points are associated to the closest roadway, and the priority of a roadway for association to the CV is determined by the roadway's facility type. @tbl-roadnetwork provides names and descriptions of the fields used to match the CV data to the road system, as described in the InTrans internal documentation.

:::{#tbl-roadnetwork}

```{=latex}
\begin{longtable}[c]{|p{0.25\textwidth}|p{0.08\textwidth}|p{0.1\textwidth}|p{0.25\textwidth}|p{0.15\textwidth}|}
\hline
 %\multicolumn{5}{| c |}{Beginning of Table}\\
 %\hline
 Field & Source & Units & Description & Domains\\
 \hline
 \endfirsthead
 
\hline
 \multicolumn{5}{|c|}{Continued from previous page}\\
 \hline
 Field & Source & Units & Description & Domains\\
 \hline
 \endhead

\hline
\endfoot

\hline
%\multicolumn{5}{| c |}{End of Table}\\
%\hline\hline
\endlastfoot

route\_id & RAMS & NA & This field is the unique identifier for a route. The segmentation is based on the Iowa DOTâ€™s \href{https://gis.iowadot.gov/rams/rest/services/lrs/FeatureServer}{RAMS network}. &  \\
\hline
route\_from\_measure & RAMS & Miles & \textbf{Do not recommend using.} This field is the minimum measure for a route, but does not represent the actual location of the segment. & \\
\hline
route\_to\_measure & RAMS & Miles & \textbf{Do not recommend using.} This field is the maximum measure for a route, but does not represent the actual location of the segment. & \\
\hline
segment\_start\_latitude & RAMS & Decimal degrees  & Latitude of the start of the segment along the RAMS network  & \\
\hline
segment\_start\_longitude & RAMS & Decimal degrees & Longitude of the start of the segment along the RAMS network & \\
\hline
segment\_end\_latitude & RAMS & Decimal degrees & Latitude of the end of the segment along the RAMS network & \\
\hline
segment\_end\_longitude & RAMS & Decimal degrees & Longitude of the end of the segment along the RAMS network & \\
\hline
segment\_start\_measure & RAMS & Miles & Measure at the beginning of the segment along the RAMS network. \textbf{This field should be used when relating to the CV data.} & \\
\hline
segment\_end\_measure & RAMS & Miles & Measure at the end of the segment along the RAMS network. \textbf{This field should be used when relating to the CV data.} & \\
\hline
segment\_length & RAMS & Miles & Calculated distance of the segment based on the difference between the \texttt{segment\_start\_measure} and \texttt{segment\_end\_measure} & \\
\hline
geohash\_lrs & Derived & NA & Unique identifier for a specific region on earth. Can be used to identify a specific location for filtering data. & \href{https://www.ibm.com/docs/en/streams/4.3.0?topic=334-geohashes}{IBM geohash documentation} \\
\hline
bearing & Derived & Degrees & Direction of the roadway in degrees (not the same as CV data). The bearing values include 0 degrees is North, 90 is East, 180 is South and 270 is West. For divided or one way roadways, the bearing represents the direction of travel for vehicles. For undivded roadways, the bearing represents the primary direction (North or East) of vehicles (but vehicles can also travel in the opposite direction of the bearing). & \\
\hline
facility\_type & RAMS & NA & Type of roadway the segment is defined as in RAMS. The facility type is defined in RAMS. & \href{https://gis.iowadot.gov/rams/rest/services/lrs/FeatureServer/44}{RAMS facility types}\\
\end{longtable}
```

Road network metadata
:::

# Overview of the Problem {#sec-problemoverview}

As we have worked with driving data, particularly the NDS data from the UNMC study, we have noticed that GPS location data can drift away from the road system. The blue points in @fig-gps-drift are the original points returned by the GPS unit installed in a vehicle for an NDS. The red points show the results of a manual shift of the latitude and longitude values for the blue points. GPS errors like these make geospatial analysis of the data much more challenging. The map-matching problem arises from the need to associate GPS points from a moving vehicle to the road system.

```{r}
#| echo: false
#| eval: false
#| label: fig-gps-drift-leaflet
#| fig-caption: |
#|   Example of GPS drift and manual shifting from original points (blue) to points more in line with the road (red)  

data("nds_data")

nds_data_sf  <- nds_data |>
  st_as_sf(coords = c("gps_long", "gps_lat"), crs = "WGS84")

farnam <- nds_data_sf |>
  filter(drive == 23)

# We need to shift the longitude and latitude values.
#offset <- st_as_sfc("POINT(0.000065 -0.000065)", crs = "WGS84")
offset <- st_as_sfc("POINT(0.000075 -0.000073)", crs = "WGS84")

shifted_points <- farnam |>
  mutate(geometry = geometry + offset)

farnam_plot <- farnam |>
  filter(time_utc >= ymd_hms("2019-05-28 21:17:20"), time_utc <= ymd_hms("2019-05-28 21:17:29"))

shifted_points_plot <- shifted_points |>
  filter(time_utc >= ymd_hms("2019-05-28 21:17:20"), time_utc <= ymd_hms("2019-05-28 21:17:29"))

leaflet() |>
  addProviderTiles(provider = "CartoDB.PositronNoLabels",
                   options = providerTileOptions(minZoom = 20, maxZoom = 20)) |>
  addCircleMarkers(data = farnam_plot, color = "blue") |>
  addCircleMarkers(data = shifted_points_plot, color = "red")
```

:::{#fig-gps-drift}

```{r}
#| echo: false
 
data("nds_data")

nds_data_sf  <- nds_data |>
  st_as_sf(coords = c("gps_long", "gps_lat"), crs = "WGS84")

farnam <- nds_data_sf |>
  filter(drive == 23)

# We need to shift the longitude and latitude values.
#offset <- st_as_sfc("POINT(0.000065 -0.000065)", crs = "WGS84")
offset <- st_as_sfc("POINT(0.000075 -0.000073)", crs = "WGS84")

shifted_points <- farnam |>
  mutate(geometry = geometry + offset) |>
  st_set_crs("WGS84")

farnam_plot <- farnam |>
  filter(time_utc >= ymd_hms("2019-05-28 21:17:20"), time_utc <= ymd_hms("2019-05-28 21:17:29"))

shifted_points_plot <- shifted_points |>
  filter(time_utc >= ymd_hms("2019-05-28 21:17:20"), time_utc <= ymd_hms("2019-05-28 21:17:29"))

farnam_bbox <- st_bbox(farnam_plot)

farnam_bbox_adj <- farnam_bbox

farnam_bbox_adj[1] <- farnam_bbox_adj[1] - 0.0001
farnam_bbox_adj[2] <- farnam_bbox_adj[2] - 0.0001
farnam_bbox_adj[3] <- farnam_bbox_adj[3] + 0.0001
farnam_bbox_adj[4] <- farnam_bbox_adj[4] + 0.0001

gps_drift_tmap <- tm_basemap(server = "CartoDB.PositronNoLabels")+
  tm_shape(farnam_plot, bbox = farnam_bbox_adj)+
  tm_dots(size = 1, fill = "blue", group = "original", group.control = "none")+
  tm_shape(shifted_points_plot, bbox = farnam_bbox_adj)+
  tm_dots(size = 1, fill = "red", group = "shifted", group.control = "none")

gps_drift_tmap
```
Example of GPS drift and manual shifting from original points (blue) to points more in line with the road (red) 
:::

There are many map-matching algorithms available, ranging from simple to complex. A simple way to solve the GPS drift problem would be to orthogonally project the GPS points onto the nearest road. @sakiPracticalGuideOpenSource2022 noted that this method was used by @bernsteinIntroductionMapMatching1996, @whiteMapMatchingAlgorithms2000, and @taylorRoadReductionFiltering2001. This method is fast, but @sakiPracticalGuideOpenSource2022 note that it is sensitive to outliers and does not incorporate information from previous points. Another option used by several authors (including @krakiwskyKalmanFilterIntegrating1988 and @scottIncreasedAccuracyMotor1994) and discussed by @sakiPracticalGuideOpenSource2022 is to fit a curve through a sequence of GPS points and find the road segments that best match the curve. @sakiPracticalGuideOpenSource2022 observed that this curve-fitting approach worked well in some special cases, but performed poorly in most real-world applications. If heading information is available for the vehicle and the road system, it can be used to check the quality of matches, as @sakiPracticalGuideOpenSource2022 noted was done by @bernsteinIntroductionMapMatching1996 and @whiteMapMatchingAlgorithms2000. It is reasonable to assume that the heading of a vehicle traveling on a road should be similar to the heading of the road, so roads should be removed from consideration if the vehicle heading and the road heading disagree, as noted by @sakiPracticalGuideOpenSource2022. @sakiPracticalGuideOpenSource2022 observed that @yangImprovedMapmatchingAlgorithm2003 and @quddusGeneralMapMatching2003 used Kalman filters to drop unreasonable GPS points and achieve better map-matching results.

Map-matching with hidden Markov models (HMMs) was introduced by @newsonHiddenMarkovMap2009, whose algorithm performed map matching using a hidden Markov model to find the most likely route on the road system corresponding to a time-stamped set of GPS coordinates while accounting for noisy data and the configuration of the road network. However, @newsonHiddenMarkovMap2009's algorithm was not a real-time algorithm. Hidden Markov models are a common basis for many later map-matching algorithms [@sakiPracticalGuideOpenSource2022].

@chaoSurveyMapMatchingAlgorithms2020 surveyed available map-matching algorithms and noted that state-transition models are a popular model type. These include hidden Markov models (HMMs) and conditional random field (CRF) models. CRF models models account for interactions among observations while HMMs only consider the relationship between an observation and the most recent previous point [@chaoSurveyMapMatchingAlgorithms2020]. Weighted graph techniques can be used to infer the path from a weighted graph where the vertices are candidate points on the road system and edges are formed between two consecutive sample points. Weighted graph techniques tend to involve the following steps: (1) Initialize the graph (2) Use a scoring function to weight the edges in the graph (3) Infer the path based on the weighted graph [@chaoSurveyMapMatchingAlgorithms2020].

As mentioned above, map-matching algorithms can suffer from data quality issues, as observed by @chaoSurveyMapMatchingAlgorithms2020. When the sampling rate is high, unnecessary detours can occur. This means that consecutive points may be too close to each other, so the later point is mapped in the upstream of the previous point. State-transition models, in particular, can suffer from matching breaks caused by outliers. The outlier point falls out of the candidate range for the true state, and so the map-matching route disconnects [@chaoSurveyMapMatchingAlgorithms2020]. Evaluating the accuracy of any map-matching algorithm can be challenging because the true path taken by the vehicle is unknown [@sakiPracticalGuideOpenSource2022].
